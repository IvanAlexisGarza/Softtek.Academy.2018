@model UserManagement.ViewModels.UserForm

@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Register a new User: </h2>

@*Helper que ayuda a iniciar una forma, ya que es disposable podemos utilizar using*@
@using (Html.BeginForm("Save", "Users"))
{
    //La clase form-group nos ayuda agrupar los campos y form-Control a darle estilo a nuestros campos
    <div class="form-group">

        @Html.LabelFor(x => x.FirstName)
        @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control"))
        @Html.ValidationMessageFor(x => x.FirstName)
    </div>

    <div class="form-group">

        @Html.LabelFor(x => x.LastName)
        @Html.TextBoxFor(x => x.LastName, new { @class = "form-control"))
        @Html.ValidationMessageFor(x => x.LastName)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.CreatedDate)
        @*De esta forma modificamos el modo que en que se muestra nuestra fecha*@
        @Html.TextBoxFor(x => x.CreatedDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.CreatedDate)
        <p>Date format: DD/MM/YYYY</p>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Salary)
        @Html.TextBoxFor(x => x.Salary, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.ProjectId)
        @*SelectList(opciones, propiedadQueSeraBinding, propiedadParaMostrar)*@
        @Html.DropDownListFor(x => x.ProjectId, new SelectList(Model., "Id", "Name"), "Select a Genre", new { @class = "form-control" })
    </div>

    //Si no ponemos este valor aqui se considerara null en el controller
    @Html.HiddenFor(x => x.Id);
    <button type="submit" class="btn btn-primary">
        Save
    </button>
}
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}